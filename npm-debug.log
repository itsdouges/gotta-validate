0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files (x86)\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@2.10.1
3 info using node@v0.12.4
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'C:\\projects\\gotta-validate',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\lahee_000\AppData\Roaming\npm-cache\gotta-validate\0.1.2\package.tgz not in flight; packing
9 verbose tar pack [ 'C:\\Users\\lahee_000\\AppData\\Roaming\\npm-cache\\gotta-validate\\0.1.2\\package.tgz',
9 verbose tar pack   'C:\\projects\\gotta-validate' ]
10 verbose tarball C:\Users\lahee_000\AppData\Roaming\npm-cache\gotta-validate\0.1.2\package.tgz
11 verbose folder C:\projects\gotta-validate
12 info prepublish gotta-validate@0.1.2
13 verbose addLocalTarball adding from inside cache C:\Users\lahee_000\AppData\Roaming\npm-cache\gotta-validate\0.1.2\package.tgz
14 silly cache afterAdd gotta-validate@0.1.2
15 verbose afterAdd C:\Users\lahee_000\AppData\Roaming\npm-cache\gotta-validate\0.1.2\package\package.json not in flight; writing
16 verbose afterAdd C:\Users\lahee_000\AppData\Roaming\npm-cache\gotta-validate\0.1.2\package\package.json written
17 silly publish { name: 'gotta-validate',
17 silly publish   version: '0.1.2',
17 silly publish   description: 'A POJO object validator for node, built with resources, promises, and testing in mind.',
17 silly publish   main: 'src/index.js',
17 silly publish   dependencies: { q: '^1.4.1' },
17 silly publish   devDependencies: { gulp: '^3.9.0', 'gulp-jasmine': '^2.0.1', nodemon: '^1.4.1' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/madou/gotta-validate.git' },
17 silly publish   scripts: { test: 'gulp test' },
17 silly publish   bugs: { url: 'https://github.com/madou/gotta-validate/issues' },
17 silly publish   keywords:
17 silly publish    [ 'lets validate',
17 silly publish      'node-validate',
17 silly publish      'validator',
17 silly publish      'validate',
17 silly publish      'GottaValidate!',
17 silly publish      'gotta validate',
17 silly publish      'validate-it' ],
17 silly publish   author: { name: 'madou' },
17 silly publish   license: 'MIT',
17 silly publish   readme: '# Gotta Validate!\r\nA POJO object validator for node, built with resources, promises, and testing in mind. \r\n\r\nCurrently being used on armory.net.au\'s node backend. Still a work in progress and missing many common validators. If you\'re using **Gotta Validate!** please submit pull requests to add rules you\'ve made! Make sure to add tests else it will be rejected.\r\n\r\nTo run tests use: `gulp test`.\r\n\r\n## 1. Examples\r\n### 1.1 General stuff\r\nNote: Take a look at src/example.spec.js for these tests.\r\n\r\nRequire it!\r\n\r\n```\r\nvar GottaValidate = require(\'gotta-validate\');\r\n```\r\n\r\nAdd rules you need, you can chain it too.\r\n```\r\nGottaValidate.addRule({\r\n    name: \'required\',\r\n    func: function (property, object) {\r\n        var item = object[property];\r\n        if (!item) {\r\n            return \'is required!\';\r\n        }\r\n    }\r\n})\r\n.addRule(..);\r\n```\r\n\r\nAdd resources you need, you can chain it too. Add the name of any property you want to validate to the rules object. It can be a single rule (string) or many rules with an array (of strings).\r\n```\r\nGottaValidate.addResource({\r\n    name: \'Users\',\r\n    mode: \'create\',\r\n    rules: {\r\n        id: \'required\',\r\n        email: [\'required\']\r\n    }\r\n})\r\n.addResource(..);\r\n```\r\n\r\nNow you gotta validate! Call the constructor function every time you want a different validator. The promise will resolve if validation was a success, and reject if any validators returned an error.\r\n```\r\nvar validator = GottaValidate({\r\n    resource: \'Users\',\r\n    mode: \'create\'\r\n});\r\n\r\nvar my_object = {};\r\n\r\nvalidator\r\n    .validate(my_object)\r\n    .then(null, function (e) {\r\n        expect(e).toBe([\r\n            \'[id] is required!\', \r\n            \'[email] is required!\' \r\n        ]);\r\n    });\r\n    \r\nmy_object = {\r\n    id: \'ayylmao\',\r\n    email: \'coolemailthough\'\r\n};\r\n\r\nvalidator\r\n    .validate(my_object)\r\n    .then(function (e) {\r\n        expect(e).not.toBeDefined();\r\n        done();\r\n    });\r\n```\r\n\r\n### 1.2 Pre-defined Rules\r\nRules which you can use without needing to add yourself are as follows (after using the addDefaultRules method).\r\n\r\n```\r\nGottaValidate.addDefaultRules();\r\n\r\n\'email\'\r\n\'no-white-space\'\r\n\'password\'\r\n\'required\'\r\n\r\nGottaValidate.addResource({\r\n    name: \'cool-resource\',\r\n    mode: \'mode\',\r\n    rules: {\r\n        aCoolProperty: [\'email\', \'no-white-space\', \'password\', \'required\']\r\n    }\r\n});\r\n```\r\n\r\n### 1.3 Extra stuff\r\n#### 1.3.1 Promise based rules\r\nYou can add promise based rules like the following. You can use any library that will work with **q**. Just make sure you return a promise! If an error occurred return an object like in the example.\r\n\r\n```\r\nvar somethingAsync = require(\'something-async\');\r\n\r\nGottaValidate.addRule({\r\n    name: \'required\',\r\n    func: function (property, object) {\r\n        var defer = q.defer();\r\n        \r\n        if (something_bad_happened_immediately) {\r\n            return q.reject({\r\n                property: property,\r\n                message: \'was bad!\'\r\n            });\r\n        }\r\n        \r\n        somethingAsync.then(function (e) {\r\n            // resolve or reject\r\n        });\r\n        \r\n        return defer.promise;\r\n    }\r\n});\r\n```\r\n### 1.3.2 Rules with dependencies\r\nYou can also add rules that have dependencies. Promise based or synchronous!\r\n\r\n```\r\nGottaValidate.addRule({\r\n    name: \'depender\',\r\n    func: function (property, object, dependencies) {\r\n        var error = dependencies.a();\r\n        if (error) {\r\n            return \'oh no error!\';\r\n        }\r\n    },\r\n    dependencies: {\r\n        a: function () { return true; }\r\n    }\r\n});\r\n```\r\n\r\n### 1.3.3 Rules that inherit\r\n```\r\n    GottaValidate.addRule({\r\n        name: \'rule-a\',\r\n        func: function () {\r\n            return \'bad\';\r\n        }\r\n    });\r\n\r\n    GottaValidate.addRule({\r\n        name: \'rule-b\',\r\n        func: function () {\r\n            return \'naughty!\';\r\n        },\r\n        inherits: [\'rule-a\'] // Array for multiple, string for single\r\n    });\r\n\r\n    GottaValidate.addResource({\r\n        name: \'inherit\',\r\n        mode: \'deez\',\r\n        rules: {\r\n            id: [\'rule-b\']\r\n        }\r\n    });\r\n```\r\n\r\n## 2. Api\r\n### 2.1 Instantiating\r\nAdd some rules and resources and then call the consturctor method. No need for new! \r\n\r\nOptions properties:\r\nresource (required), mode (required)\r\n```\r\nvar validator = GottaValidate(options);\r\nvalidator.validate(object);\r\n```\r\n\r\n### 2.2 Static methods\r\n#### 2.2.1 addRule(options)\r\nAdds a rule. Returns this.\r\n\r\nOptions properties:\r\nname (required), func (required), inherits (optional)\r\n\r\n#### 2.2.2 addResource(options)\r\nAdd a resource. Returns this.\r\n\r\n#### 2.2.3 addDefaultRules()\r\nAdds the default rules to the rule table.\r\n\r\nOptions properties:\r\nname (required), mode (required), rules (optional)\r\n\r\n### 2.3 Instance methods\r\n#### 2.3.1 validate(object)\r\nValidates an object based on an instantiated validator. Returns a promise.\r\n\r\n## 3. License\r\n```\r\nCopyright (c) 2015 Michael Dougall\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the "Software"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '7e12f51577c2bb1b7dc4bbfa666e902fc368f991',
17 silly publish   homepage: 'https://github.com/madou/gotta-validate#readme',
17 silly publish   _id: 'gotta-validate@0.1.2',
17 silly publish   _shasum: 'f64f71aae623a4ad1496b38ab259196b4d973439',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name gotta-validate
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/gotta-validate
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading C:\Users\lahee_000\AppData\Roaming\npm-cache\gotta-validate\0.1.2\package.tgz
25 verbose request uri https://registry.npmjs.org/gotta-validate
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 11:31:10 PM
28 verbose request using bearer token for auth
29 verbose request id 8d248dcf6e13396c
30 http request PUT https://registry.npmjs.org/gotta-validate
31 http 403 https://registry.npmjs.org/gotta-validate
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Tue, 25 Aug 2015 13:31:13 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-syd1625-SYD',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1440509472.437511,VS0,VE582' }
33 verbose request invalidating C:\Users\lahee_000\AppData\Roaming\npm-cache\registry.npmjs.org\gotta-validate on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 0.1.2." : gotta-validate
35 verbose stack     at CachingRegistryClient.<anonymous> (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:247:14)
35 verbose stack     at Request._callback (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:170:14)
35 verbose stack     at Request.self.callback (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:368:22)
35 verbose stack     at Request.emit (events.js:110:17)
35 verbose stack     at Request.<anonymous> (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:1219:14)
35 verbose stack     at Request.emit (events.js:129:20)
35 verbose stack     at IncomingMessage.<anonymous> (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:1167:12)
35 verbose stack     at IncomingMessage.emit (events.js:129:20)
35 verbose stack     at _stream_readable.js:908:16
35 verbose stack     at process._tickCallback (node.js:355:11)
36 verbose statusCode 403
37 verbose pkgid gotta-validate
38 verbose cwd C:\projects\gotta-validate
39 error Windows_NT 6.3.9600
40 error argv "C:\\Program Files (x86)\\nodejs\\\\node.exe" "C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
41 error node v0.12.4
42 error npm  v2.10.1
43 error code E403
44 error "You cannot publish over the previously published version 0.1.2." : gotta-validate
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
